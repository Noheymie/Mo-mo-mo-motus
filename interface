#include <SFML/Graphics.hpp>
#include <iostream>
#include <vector>
#include <string>

using namespace std;
using namespace sf;

// Création d'une grille (6;size(mot))

void drawGrid(RenderWindow& window) {
	vector<RectangleShape> lines;

	// Lignes horizontales
	lines.push_back(RectangleShape(Vector2f(300, 3)));
	lines.push_back(RectangleShape(Vector2f(300, 3)));
	lines.push_back(RectangleShape(Vector2f(300, 3)));
	lines.push_back(RectangleShape(Vector2f(300, 3)));
	lines.push_back(RectangleShape(Vector2f(300, 3)));

	// Lignes verticales
	for (int j = 1; j < mref.size(); j++)
		lines.push_back(RectangleShape(Vector2f(3, 300)));

	// Positionnement des lignes

	lines[0].setPosition(0, 50);
	lines[1].setPosition(0, 100);
	lines[2].setPosition(0, 150);
	lines[3].setPosition(0, 200);
	lines[4].setPosition(0, 250);

	int x,y = 0;

	for (int j = 1; j < mref.size(); j++)
	{
		x = 4 + j;
		y = j * (300 / (mref.size()));
		lines[x].setPosition(y, 0);
	}

	// Lignes de couleurs noires
	for (size_t i = 0; i < lines.size(); i++)
		lines[i].setFillColor(Color::Black);

	// Affichage
	for (size_t i = 0; i < lines.size(); i++)
		window.draw(lines[i]);
}


int main() {

	//Mot mref; mref.random();

	string mref = "hello";

	// Initialisation de la grille

	RenderWindow window(VideoMode(300, 300), "Motus");

	// Historique h; 

	while (window.isOpen())
	{
		window.clear(Color::White);
		drawGrid(window);
		window.display();

		//for i de 0 à 5 ?
		
		Event event;
		//Mot m;

		while (window.pollEvent(event))
		{
			switch (event.type)
			{
			case Event::KeyPressed:
				if (event.key.code == event.key.shift) {
					// if m.size == mref.size : if m.existe() alors m.compare(mref)
					// else message "Entrer mot de mref.size ?
				}
				else {
					int a = event.key.code;
					//afficher a dans la grille
					//ajoute la lettre au mot m
				}
				break;
			default:
				break;
			}
		}

		// si m est dans dico : m.comp(mref) -> comparaison lettre à lettre avec mref et stockage de m dans h
		// affichage couleurs -> window.display()
		// if m=mref or h.size()=6 -> stop 
	}
	return 0;
}
